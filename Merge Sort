#include <iostream>
#include <time.h>
using namespace std;

void merge(int *,int, int , int );

void merge_sort(int *arr, int low, int high)
{
    int mid;
    if (low<high)
    {
        
        mid=(low+high)/2;
        merge_sort(arr,low,mid);
        merge_sort(arr,mid+1,high);
        merge(arr,low,high,mid);
    }
}

void merge(int *arr, int low, int high, int mid)
{
    int i, j, k, c[50];
    i=low;
    k=low;
    j=mid+1;
    while(i<=mid&&j<=high) 
    {
        if (arr[i]<arr[j]) 
        {
            c[k]=arr[i];
            k++;
            i++;
        }
        else  
        {
            c[k]=arr[j];
            k++;
            j++;
        }
    }
    while(i<=mid) 
    {
        c[k]=arr[i];
        k++;
        i++;
    }
    while(j<=high) 
    {
        c[k]=arr[j];
        k++;
        j++;
    }
    for(i=low;i<k;i++)  
    {
        arr[i]=c[i];
    }
}
void generate_random(int a[],int n)
{ 
    int i;
    srand(time(0));
    for(i=0;i<n;i++)
    {
        a[i]=rand()%100;
        cout<<a[i]<<"\n";
    }    
}

int main()
{
    int a[20], n, i;
    clock_t st, et;
    double ts;
    cout<<"Enter no.of elements:";
    cin>>n;
    
    cout<<"\nEntering random values into array: \n";
    generate_random(a,n);
    
    cout << "\n\nSorted elements are: \n";
    for(i=1;i<=n;i++)
    {
        cout<<a[i]<<"\n";
    }
    st=clock();                                   //For calculating the time complexity
    (a, 0, n-1);
    et=clock();
    ts=(double)(et-st)/CLOCKS_PER_SEC;
    
    cout << "The total time of execution is: "<<ts;
    
    
}



